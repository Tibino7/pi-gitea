apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}
  labels:
    app: {{ template "fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ template "fullname" . }}
  template:
    metadata:
      labels:
        app: {{ template "fullname" . }}
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      initContainers:
      - name: init
        image: {{ .Values.images.gitea }}
        imagePullPolicy: {{ .Values.images.imagePullPolicy }}
        env:
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ template "db.fullname" . }}
                key: dbPassword
          - name: SCRIPT
            value: &script |-
              mkdir -p /datatmp/gitea/conf
              if [ ! -f /datatmp/gitea/conf/app.ini ]; then
                sed "s/POSTGRES_PASSWORD/${POSTGRES_PASSWORD}/g" < /etc/gitea/app.ini > /datatmp/gitea/conf/app.ini
              fi
        command: ["/bin/sh",'-c', *script]
        volumeMounts:
          - name: gitea-data
            mountPath: /datatmp
          - name: gitea-config
            mountPath: /etc/gitea
      containers:
        - name: gitea
          image: {{ .Values.images.gitea }}
          imagePullPolicy: {{ .Values.images.imagePullPolicy }}
          env:
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ template "db.fullname" . }}
                  key: dbPassword
          ports:
            - name: ssh
              containerPort: {{ .Values.service.ssh.port  }}
            - name: http
              containerPort: {{ .Values.service.http.port  }}
          livenessProbe:
            tcpSocket:
              port: http
            initialDelaySeconds: 200
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 10
          readinessProbe:
            tcpSocket:
              port: http
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          resources:
{{ toYaml .Values.resources.gitea | indent 12 }}
          volumeMounts:
            - name: gitea-data
              mountPath: /data
            - name: gitea-config
              mountPath: /etc/gitea
      volumes:
      - name: gitea-data
{{- if .Values.persistence.enabled }}
  {{- if .Values.persistence.directGiteaVolumeMount }}
{{ tpl .Values.persistence.directGiteaVolumeMount . | indent 8 }}
  {{- else }}
        persistentVolumeClaim:
          claimName: {{ .Values.persistence.existingGiteaClaim | default (include "fullname" .) }}
  {{- end }}
{{- else }}
        emptyDir: {}
{{- end }}
      - name: gitea-config
        configMap:
          name: {{ template "fullname" . }}
{{- if .Values.imagePullSecrets }}
      imagePullSecrets:
        - name: {{ .Values.imagePullSecrets }}
{{- end }}
{{- if .Values.affinity }}
      affinity:
{{ toYaml .Values.affinity | indent 8 }}
{{- end }}
{{- if .Values.tolerations }}
      tolerations:
{{ toYaml .Values.tolerations | indent 8 }}
{{- end }}